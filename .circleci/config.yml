# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:2.7

#    working_directory: ~/Git/ca-project

    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            pip install --user -r requirements.txt

      - run:
          name: run tests
          command: |
            python tests.py

      - persist_to_workspace:
         root: .
         paths:
           - .


  dockerize:
   machine: true
#   working_directory: ~/Git/ca-project
   steps:
     - attach_workspace:
        at: .

#     - run 
#         name: Create artifact
#         command: |
#           touch artifact.zip;
#           echo . > artifact.zip

     - store_artifacts:
         path: .
         destination: prefix

     # Login to docker
     - run: docker login -u $DOCKER_USER -p $DOCKER_PASS

     # build the application image
     - run: docker build -t $DOCKER_USER/myapp-project:$CIRCLE_SHA1 .

     # deploy the image
     - run: docker push $DOCKER_USER/myapp-project:$CIRCLE_SHA1    

     - run: docker tag $DOCKER_USER/myapp-project:$CIRCLE_SHA1 $DOCKER_USER/myapp-project:latest

     - run: docker push $DOCKER_USER/myapp-project:$latest    

  deploy:
    machine:
      enabled: true
#    working_directory: ~/Git/ca-project
    steps:
      - add_ssh_keys:
          fingerprints:
            - "bc:b2:8d:c5:3c:61:9e:44:93:37:a3:2b:cf:36:09:a2"
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: stop the old, pull and start the new docker image
          command: |
            ssh ubuntu@35.190.193.132 "docker stop myapp-project ; docker pull $DOCKER_USER/myapp-project ; docker run -d myapp-project"

workflows:
  version: 2
  build-dockerize-and-deploy:
    jobs:
      - build
      - dockerize:
          requires:
            - build
      - deploy:
          requires:
            - dockerize

